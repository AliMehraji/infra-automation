version: '3.9'
services:
  vote:
    build: 
      context: ./vote
    container_name: vote
    hostname: vote-server
    restart: unless-stopped
    command: python app.py
    depends_on:
      redis-node-5:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - web_net
      - redis_net
#     - app_net
    labels:
      - "logging=promtail"
#     - "logging_jobname=containerlogs"
      - "traefik.enable=true"
      - "traefik.docker.network=web_net"
      - "traefik.http.routers.vote.entrypoints=http"
      - "traefik.http.routers.vote.rule=Host(`${VOTE_SUB}.${DOMAIN_ADDRESS}`)"
      - "traefik.http.routers.vote.middlewares=https-redirect"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.vote-secure.entrypoints=https"
      - "traefik.http.routers.vote-secure.rule=Host(`${VOTE_SUB}.${DOMAIN_ADDRESS}`)"
      - "traefik.http.routers.vote-secure.tls=true"
      - "traefik.http.routers.vote-secure.tls.certresolver=mycert"
      - "traefik.http.services.vote.loadbalancer.server.port=80"

  worker:
    build:
      context: ./worker
    container_name: worker
    networks:
      - redis_net
      - pg_net
    depends_on:
      redis-node-5:
        condition: service_healthy 
      pgpool:
          condition: service_healthy 
    labels:
      - "logging=promtail"

  result:
    image: dockersamples/examplevotingapp_result
    container_name: result-app
    restart: unless-stopped
    depends_on:
      pgpool:
        condition: service_healthy 
    networks:
      - web_net
      - pg_net
    labels:
      - "logging=promtail"
      - "traefik.enable=true"
      - "traefik.docker.network=web_net"
      - "traefik.http.routers.result.entrypoints=http"
      - "traefik.http.routers.result.rule=Host(`${RESULT_SUB}.${DOMAIN_ADDRESS}`)"
      - "traefik.http.routers.result.middlewares=https-redirect"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.result-secure.entrypoints=https"
      - "traefik.http.routers.result-secure.rule=Host(`${RESULT_SUB}.${DOMAIN_ADDRESS}`)"
      - "traefik.http.routers.result-secure.tls=true"
      - "traefik.http.routers.result-secure.tls.certresolver=mycert"
      - "traefik.http.services.result.loadbalancer.server.port=80"
  
  pg-0:
    image: bitnami/postgresql-repmgr:16
    container_name: pg-0
    volumes:
      - pg_0_data:/bitnami/postgresql
    networks:
      - pg_net
    environment:
      - POSTGRESQL_POSTGRES_PASSWORD=postgres
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=postgres
      - POSTGRESQL_DATABASE=postgres
      - REPMGR_PASSWORD=repmgrpassword
      - REPMGR_PRIMARY_HOST=pg-0
      - REPMGR_PARTNER_NODES=pg-0,pg-1
      - REPMGR_NODE_NAME=pg-0
      - REPMGR_NODE_NETWORK_NAME=pg-0
    labels:
      - "logging=promtail"

  pg-1:
    image: bitnami/postgresql-repmgr:16
    container_name: pg-1
    volumes:
      - pg_1_data:/bitnami/postgresql
    networks:
      - pg_net
    environment:
      - POSTGRESQL_POSTGRES_PASSWORD=postgres
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=postgres
      - POSTGRESQL_DATABASE=postgres
      - REPMGR_PASSWORD=repmgrpassword
      - REPMGR_PRIMARY_HOST=pg-0
      - REPMGR_PARTNER_NODES=pg-0,pg-1
      - REPMGR_NODE_NAME=pg-1
      - REPMGR_NODE_NETWORK_NAME=pg-1
    labels:
      - "logging=promtail"

  pgpool:
    image: bitnami/pgpool:4
    container_name: db
    networks:
      - pg_net
    environment:
      - PGPOOL_BACKEND_NODES=0:pg-0:5432,1:pg-1:5432
      - PGPOOL_SR_CHECK_USER=postgres
      - PGPOOL_SR_CHECK_PASSWORD=postgres
      - PGPOOL_ENABLE_LDAP=no
      - PGPOOL_POSTGRES_USERNAME=postgres
      - PGPOOL_POSTGRES_PASSWORD=postgres
      - PGPOOL_ADMIN_USERNAME=admin
      - PGPOOL_ADMIN_PASSWORD=adminpassword
    healthcheck:
      test: ["CMD", "/opt/bitnami/scripts/pgpool/healthcheck.sh"]
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - "logging=promtail"

  redis-node-0:
    image: docker.io/bitnami/redis-cluster:7.2
    container_name: redis-node-0
    volumes:
      - redis-cluster_data-0:/bitnami/redis/data
    networks:
      - redis_net
    environment:
      - 'ALLOW_EMPTY_PASSWORD=no'
      - 'REDIS_PASSWORD=yourpassword'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'
    labels:
      - "logging=promtail"

  redis-node-1:
    image: docker.io/bitnami/redis-cluster:7.2
    container_name: redis-node-1
    volumes:
      - redis-cluster_data-1:/bitnami/redis/data
    networks:
      - redis_net
    environment:
      - 'ALLOW_EMPTY_PASSWORD=no'
      - 'REDIS_PASSWORD=yourpassword'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'
    labels:
      - "logging=promtail"

  redis-node-2:
    image: docker.io/bitnami/redis-cluster:7.2
    container_name: redis-node-2
    volumes:
      - redis-cluster_data-2:/bitnami/redis/data
    networks:
      - redis_net
    environment:
      - 'ALLOW_EMPTY_PASSWORD=no'
      - 'REDIS_PASSWORD=yourpassword'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'
    labels:
      - "logging=promtail"

  redis-node-3:
    image: docker.io/bitnami/redis-cluster:7.2
    container_name: redis-node-3
    volumes:
      - redis-cluster_data-3:/bitnami/redis/data
    networks:
      - redis_net
    environment:
      - 'ALLOW_EMPTY_PASSWORD=no'
      - 'REDIS_PASSWORD=yourpassword'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'
    labels:
      - "logging=promtail"

  redis-node-4:
    image: docker.io/bitnami/redis-cluster:7.2
    container_name: redis-node-4
    volumes:
      - redis-cluster_data-4:/bitnami/redis/data
    networks:
      - redis_net
    environment:
      - 'ALLOW_EMPTY_PASSWORD=no'
      - 'REDIS_PASSWORD=yourpassword'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'
    labels:
      - "logging=promtail"

  redis-node-5:
    image: docker.io/bitnami/redis-cluster:7.2
    container_name: redis-node-5
    volumes:
      - redis-cluster_data-5:/bitnami/redis/data
    networks:
      - redis_net
    depends_on:
      - redis-node-0
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
    healthcheck:
      test: ["CMD-SHELL", "redis-cli --cluster call 127.0.0.1:6379 CLUSTER INFO -a yourpassword | grep 'cluster_state:ok'"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    environment:
      - 'ALLOW_EMPTY_PASSWORD=no'
      - 'REDIS_PASSWORD=yourpassword'
      - 'REDISCLI_AUTH=yourpassword'
      - 'REDIS_CLUSTER_REPLICAS=1'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'
      - 'REDIS_CLUSTER_CREATOR=yes'
    labels:
      - "logging=promtail"

networks:
  web_net:
    name: web_net
  redis_net:
    name: redis_net
  pg_net:
    name: pg_net

volumes:
  redis-cluster_data-0:
    driver: local
  redis-cluster_data-1:
    driver: local
  redis-cluster_data-2:
    driver: local
  redis-cluster_data-3:
    driver: local
  redis-cluster_data-4:
    driver: local
  redis-cluster_data-5:
    driver: local
  pg_0_data:
    driver: local
  pg_1_data:
    driver: local

