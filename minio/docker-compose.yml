networks:
  minio:
    name: minio
    external: true
  traefik-net:
    external: true
  prometheus:
    external: true

volumes:
  minio-data:

configs:
  mimir-policy:
    file: ./mimir-policy.json
  loki-policy:
    file: ./loki-policy.json

services:
  minio:
    image: quay.io/minio/minio:${MINIO_MINIO_VERSION:-latest}
    hostname: minio-1
    networks:
      - minio
      - traefik-net
      - prometheus
    environment: 
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: 
      - "server"
      - "--console-address"
      - ":9001"
      - "http://minio-{1...2}:9000/data"
    volumes:
      - minio-data:/data
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == sw1
      update_config:
        parallelism: 1
        delay: 30s
        order: stop-first
        failure_action: rollback
      rollback_config:
        parallelism: 1
        delay: 30s
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 3
        window: 120s
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-net"
        - "traefik.http.routers.minio.entrypoints=http"
        - "traefik.http.routers.minio.rule=Host(`${MINIO_SUB}.${DOMAIN}`)"
        - "traefik.http.routers.minio.middlewares=https-redirect"
        - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
        - "traefik.http.routers.minio-secure.entrypoints=https"
        - "traefik.http.routers.minio-secure.rule=Host(`${MINIO_SUB}.${DOMAIN}`)"
        - "traefik.http.routers.minio-secure.tls=true"
        - "traefik.http.routers.minio-secure.tls.certresolver=mycert"
        - "traefik.http.services.minio.loadbalancer.server.port=9001"
  minio-2:
    image: quay.io/minio/minio:${MINIO_MINIO_VERSION:-latest}
    hostname: minio-2
    networks:
      - minio
      - traefik-net
      - prometheus
    command: 
      - "server"
      - "--console-address"
      - ":9001"
      - "http://minio-{1...2}:9000/data"
    volumes:
      - minio-data:/data
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == sw2
      update_config:
        parallelism: 1
        delay: 30s
        order: stop-first
        failure_action: rollback
      rollback_config:
        parallelism: 1
        delay: 30s
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 3
        window: 120s
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-net"
        - "traefik.http.routers.minio.entrypoints=http"
        - "traefik.http.routers.minio.rule=Host(`${MINIO_SUB}.${DOMAIN}`)"
        - "traefik.http.routers.minio.middlewares=https-redirect"
        - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
        - "traefik.http.routers.minio-secure.entrypoints=https"
        - "traefik.http.routers.minio-secure.rule=Host(`${MINIO_SUB}.${DOMAIN}`)"
        - "traefik.http.routers.minio-secure.tls=true"
        - "traefik.http.routers.minio-secure.tls.certresolver=mycert"
        - "traefik.http.services.minio.loadbalancer.server.port=9001"

  createbuckets:
    image: quay.io/minio/mc:${MINIO_MC_VERSION:-latest}
    depends_on:
      - minio
      - minio-2 
    networks:
      - minio
    configs:
      - source: mimir-policy
        target: /tmp/mimir-policy.json
      - source: loki-policy
        target: /tmp/loki-policy.json
    deploy:
      replicas: 1
      restart_policy:
        condition: none
    entrypoint: >
      /bin/bash -c "
       sleep 10 ;
       /usr/bin/mc alias set myminio http://minio:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD ;
       for bucket in $BUCKETS ; do
         if ! /usr/bin/mc ls myminio/$$bucket ; then
           /usr/bin/mc mb myminio/$$bucket ;
           /usr/bin/mc policy set public myminio/$$bucket ;
         fi ;
       done ;
       if ! /usr/bin/mc admin policy info myminio mimir-policy; then
        /usr/bin/mc admin policy create myminio mimir-policy /tmp/mimir-policy.json;
       fi;
       if ! /usr/bin/mc admin policy info myminio loki-policy; then
        /usr/bin/mc admin policy create myminio loki-policy /tmp/loki-policy.json;
       fi;
       if ! /usr/bin/mc admin user info myminio $MINIO_USER; then
         /usr/bin/mc admin user add myminio $MINIO_USER $MINIO_PASSWORD;
         /usr/bin/mc admin policy attach myminio mimir-policy --user $MINIO_USER
       fi;
         /usr/bin/mc admin policy attach myminio loki-policy --user $MINIO_USER
       exit 0;
      "
