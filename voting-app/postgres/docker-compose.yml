services:
  pg:
    image: bitnami/postgresql-repmgr:16
    hostname: pg-{{.Task.Slot}}
    volumes:
      - pg_data:/bitnami/postgresql
    networks:
      - pg_net
    environment:
      - POSTGRESQL_POSTGRES_PASSWORD=postgres
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=postgres
      - POSTGRESQL_DATABASE=postgres
      - REPMGR_PASSWORD=repmgrpassword
      - REPMGR_PRIMARY_HOST=pg-1
      - REPMGR_PARTNER_NODES=pg-1,pg-2
      - REPMGR_NODE_NAME=pg-{{.Task.Slot}}
      - REPMGR_NODE_NETWORK_NAME=pg-{{.Task.Slot}}
    deploy:
      replicas: 2
      placement:
        max_replicas_per_node: 1
        constraints:
          - node.labels.pg == true

  pgpool:
    image: bitnami/pgpool:4
    hostname: db
    networks:
      - pg_net
    environment:
      - PGPOOL_BACKEND_NODES=0:pg-1:5432,1:pg-2:5432
      - PGPOOL_SR_CHECK_USER=postgres
      - PGPOOL_SR_CHECK_PASSWORD=postgres
      - PGPOOL_ENABLE_LDAP=no
      - PGPOOL_POSTGRES_USERNAME=postgres
      - PGPOOL_POSTGRES_PASSWORD=postgres
      - PGPOOL_ADMIN_USERNAME=admin
      - PGPOOL_ADMIN_PASSWORD=adminpassword
    depends_on:
      - pg
    healthcheck:
      test: ["CMD", "/opt/bitnami/scripts/pgpool/healthcheck.sh"]
      interval: 10s
      timeout: 5s
      retries: 5

  pg-backup:
    image: postgres:alpine
    volumes:
      - pg_backup:/backup
      - pg_data:/var/lib/postgresql/data:ro
    networks:
      - pg_net
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    command: ["sh", "-c", "echo '* * * * * /usr/bin/pg_dump -U $$POSTGRES_USERNAME -d $$POSTGRES_DATABASE > /backup/backup.sql' > /etc/crontabs/root && crond -f -L /dev/stdout"]
    depends_on:
     - pgpool
    deploy:
      placement:
        constraints:
          - node.labels.pg == true

volumes:
  pg_data:
    external: true
  pg_backup:

networks:
  pg_net:
    external: true
    name: pg_net
    driver: overlay
