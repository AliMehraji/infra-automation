networks:
  minio:
    name: minio
    external: true
  redis:
    name: redis_redis
    external: true
  pg_net:
    name: pg_net
    external: true
  prometheus:
    name: prometheus
  traefik-net:
    name: traefik-net
    external: true

configs:
# prometheus:
#   file: ./prometheus/prometheus.yml
  grafana_datasource:
    file: ./grafana/datasources/datasource.yml
  loki:
    file: ./loki/loki.yaml
  promtail:
    file: ./promtail/promtail.yaml
  alertmanager:
    file: ./alertmanager/alertmanager.yml

services:
  prometheus:
    image: prom/prometheus
    hostname: prometheus
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./prometheus:/etc/prometheus
#   configs:
#     - source: prometheus
#       target: /etc/prometheus/prometheus.yml
    networks:
      - prometheus
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    deploy:
      placement:
        constraints:
           - node.hostname == sw1

  grafana:
    image: grafana/grafana
    hostname: grafana
    networks:
      - prometheus
      - traefik-net
    configs:
      - source: grafana_datasource
        target: /etc/grafana/provisioning/datasources/datasource.yml
    volumes:
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards/
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=${GRAFANA_INSTALL_PLUGINS}
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_PATHS_DATA=/var/lib/grafana
      - GF_NEWS_ENABLED=false
      - GC_CHECK_FOR_UPDATES=false
      - GF_REPORTING_ENABLED=false
      - GF_SUPPORT_BUNDLES_ENABLED=false
    deploy:
      placement:
        constraints:
           - node.hostname == sw1
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-net"
        - "traefik.http.routers.grafana.entrypoints=http"
        - "traefik.http.routers.grafana.rule=Host(`grafana.arman.fun`)"
        - "traefik.http.routers.grafana.middlewares=https-redirect"
        - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
        - "traefik.http.routers.grafana-secure.entrypoints=https"
        - "traefik.http.routers.grafana-secure.rule=Host(`grafana.arman.fun`)"
        - "traefik.http.routers.grafana-secure.tls=true"
        - "traefik.http.routers.grafana-secure.tls.certresolver=mycert"
        - "traefik.http.services.grafana.loadbalancer.server.port=3000"
 
  loki:
    image: grafana/loki:latest
    hostname: loki
    networks:
      - minio
      - prometheus
    command: -config.file=/loki.yaml
    configs:
      - source: loki
        target: /loki.yaml

  promtail:
    image:  grafana/promtail:latest
    hostname: promtail
    configs:
      - source: promtail
        target: /etc/promtail/docker-config.yaml
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/docker-config.yaml
    networks:
      - prometheus
    depends_on:
      - loki
    deploy:
      mode: global

  alertmanager:
    image: prom/alertmanager:v0.26.0
#   volumes:
#     - alertmanager_data:/alertmanager
    configs:
      - source: alertmanager
        target: /etc/alertmanager/alertmanager.yml
    command:
      - --config.file=/etc/alertmanager/alertmanager.yml
      - --storage.path=/alertmanager
    networks:
      - prometheus

  discord-alerts:
    image: benjojo/alertmanager-discord
#   environment:
#     - DISCORD_WEBHOOK=https://discord.com/api/webhooks/1222636673222049792/C0rUyzrLUCyaOIxZgagddfze-wZcLZgYO-R5m4FypXm9lFPScQetB_PaAwT7Z5z34Mlr
    networks:
      - prometheus 

