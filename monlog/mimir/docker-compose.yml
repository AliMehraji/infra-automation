networks:
  minio:
    name: minio
    external: true
  prometheus:
    name: prometheus
    external: true

volumes:
  mimir:

configs:
  mimir.yml:
    template_driver: golang
    file: configs/mimir.yml
# alertmanager-fallback-config.yml:
#   file: configs/alertmanager-fallback-config.yml
  mimir-entrypoint:
    file: configs/mimir-entrypoint.sh

services:
  mimir:
    image: grafana/mimir:${GRAFANA_MIMIR_VERSION:-latest}
    hostname: mimir-{{.Task.Slot}}
    entrypoint: [ "sh", "/etc/mimir-entrypoint.sh" ]
    networks:
      - prometheus
      - minio
    volumes:
      - mimir:/mimir
    configs:
      - source: mimir-entrypoint
        target: /etc/mimir-entrypoint.sh
      - source: mimir.yml
        target: /etc/mimir-template.yml
#     - source: alertmanager-fallback-config.yml
#       target: /etc/mimir/alertmanager-fallback-config.yml
    extra_hosts:
      - host.docker.internal:host-gateway
    deploy:
      replicas: ${GRAFANA_MIMIR_REPLICAS:-3}
      placement:
        max_replicas_per_node: 1
#       constraints:
#         - node.labels.grafana-mimir == true
        preferences:
          - spread: node.labels.grafana-mimir
      labels:
        io.prometheus.enabled: "true"
        io.prometheus.scrape_port: "3100"
      update_config:
        parallelism: 1
        delay: 30s
        order: stop-first
        failure_action: rollback
      rollback_config:
        parallelism: 1
        delay: 30s
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 3
        window: 120s
